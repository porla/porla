name: Release

on:
  push:
    tags:
      - 'v*.*.*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: write
  pull-requests: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: porla/porla
  PLATFORMS: linux/arm64,linux/amd64

jobs:
  build:
    strategy:
      matrix:
        runner: [buildjet-4vcpu-ubuntu-2204]

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '5.x'

      - name: Calculate version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:latest

      - name: Login to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate docker image tags
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: |
            name=ghcr.io/${{ github.repository_owner }}/porla
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.sha }}
            type=raw,value=${{ steps.gitversion.outputs.fullSemVer }}

      - name: Create draft release
        run: gh release create $GITHUB_REF_NAME -d -t "Porla $GITHUB_REF_NAME"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node.js dependencies
        run: npm ci
        working-directory: ./html

      - name: Build web UI
        run: npm run build
        working-directory: ./html

      - name: Package web UI
        run: pushd html/dist && zip -9 -r ../webui.zip * && popd && ls -la

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: GITVERSION_SEMVER=${{ steps.gitversion.outputs.fullSemVer }}
          context: .
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Copy Porla binaries from images
        run: |
          docker create --name tmp --platform linux/arm64 ${{ steps.metadata.outputs.tags }}
          docker cp tmp:/usr/bin/porla /tmp/porla-arm64
          docker rm -f tmp
          docker create --name tmp-amd64 ${{ steps.metadata.outputs.tags }}
          docker cp tmp-amd64:/usr/bin/porla /tmp/porla-amd64
          docker rm -f tmp-amd64

      - name: Upload Porla binaries to release
        run: |
         gh release upload $GITHUB_REF_NAME /tmp/porla-arm64#porla-linux-arm64
         gh release upload $GITHUB_REF_NAME /tmp/porla-amd64#porla-linux-amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            CCACHE_REMOTE_STORAGE=${{ secrets.PORLA_CCACHE_REMOTE_STORAGE_WRITE }}
            GITVERSION_SEMVER=${{ steps.gitversion.outputs.fullSemVer }}
          context: .
          # Skip pushing when PR from a fork
          push: ${{ !github.event.pull_request.head.repo.fork }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
