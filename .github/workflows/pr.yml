name: Pull request

on:
  pull_request:

env:
  REGISTRY: ghcr.io
  PLATFORMS: linux/arm64,linux/amd64

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '5.x'

      - name: Calculate version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:latest

      - name: Login to the container registry
        # Skip when PR from a fork
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate docker image tags
        id: metadata
        uses: docker/metadata-action@v4
        with:
          flavor: |
            # Disable latest tag
            latest=false
          images: |
            name=ghcr.io/${{ github.repository_owner }}/porla
          tags: |
            # Tag with branch name
            type=ref,event=branch
            # Tag with pr-number
            type=ref,event=pr
            # Tag with git tag on release
            type=ref,event=tag
            type=raw,value=release,enable=${{ github.event_name == 'release' }}

      - name: Install Node.js dependencies
        run: npm ci
        working-directory: ./html

      - name: Build web UI
        run: npm run build
        working-directory: ./html

      - name: Package web UI
        run: pushd html/dist && zip -9 -r ../webui.zip * && popd && ls -la

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: GITVERSION_SEMVER=${{ steps.gitversion.outputs.fullSemVer }}
          context: .
          # Skip pushing when PR from a fork
          push: ${{ !github.event.pull_request.head.repo.fork }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Copy Porla binaries from images
        run: |
          docker create --name tmp arm64/${{ steps.metadata.outputs.tags }}
          docker cp tmp:/usr/bin/porla /tmp/porla-arm64
          docker rm -f tmp
          docker create --name tmp-amd64 amd64/${{ steps.metadata.outputs.tags }}
          docker cp tmp-amd64:/usr/bin/porla /tmp/porla-amd64
          docker rm -f tmp-amd64
    

      - name: Upload Porla binary to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: porla-linux-amd64
          path: /tmp/porla-amd64

      - name: Upload Porla arm64 binary to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: porla-linux-arm64
          path: /tmp/porla-arm64
