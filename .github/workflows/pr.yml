name: Pull request

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  build:
    strategy:
      matrix:
        runner: [buildjet-2vcpu-ubuntu-2204,buildjet-4vcpu-ubuntu-2204-arm]

    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '5.x'

      - name: Calculate version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true


      - name: Login to the container registry
        # Skip when PR from a fork
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare
        id: prep
        run: |
          echo "ARCH=$(uname -m)" >> $GITHUB_OUTPUT

      - name: Generate docker image tags
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: |
            name=ghcr.io/${{ github.repository_owner }}/porla-${{ steps.prep.outputs.ARCH }}
          tags: |
            

      - name: Install Node.js dependencies
        run: npm ci
        working-directory: ./html

      - name: Build web UI
        run: npm run build
        working-directory: ./html

      - name: Package web UI
        run: pushd html/dist && zip -9 -r ../webui.zip * && popd && ls -la

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          build-args: GITVERSION_SEMVER=${{ steps.gitversion.outputs.fullSemVer }}
          context: .
          # Skip pushing when PR from a fork
          push: ${{ !github.event.pull_request.head.repo.fork }}
          platforms: ${{ steps.prep.outputs.ARCH }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          load: true

      - name: Copy Porla binary from image (arm64)
        if: ${{ matrix.runner }} == "buildjet-4vcpu-ubuntu-2204-arm"
        run: |
          docker create --name tmp ${{ steps.metadata.outputs.tags }}
          docker cp tmp:/usr/bin/porla /tmp/porla
          docker rm -f tmp

      - name: Copy Porla binary from image (amd64)
        if: ${{ matrix.runner }} == "buildjet-2vcpu-ubuntu-2204"
        run: |
          docker create --name tmp ${{ steps.metadata.outputs.tags }}
          docker cp tmp-amd64:/usr/bin/porla /tmp/porla
          docker rm -f tmp-amd64

      - name: Upload Porla binary to artifacts (arm64)
        if: ${{ matrix.runner }} == "buildjet-4vcpu-ubuntu-2204-arm"
        uses: actions/upload-artifact@v3
        with:
          name: porla-linux-arm64
          path: /tmp/porla

      - name: Upload Porla binary to artifacts (and64)
        if: ${{ matrix.runner }} == "buildjet-2vcpu-ubuntu-2204"
        uses: actions/upload-artifact@v3
        with:
          name: porla-linux-amd64
          path: /tmp/porla

